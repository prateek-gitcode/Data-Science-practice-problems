setwd("D:/Data science materials/Assignments/Decision Tree")
dataset= read.csv('Company_Data.csv')
View(dataset)
dataset= dataset[,(1:6)]
#fitting the Decision Tree into the dataset
library(rpart)
regressor= rpart(formula = dataset$Sales~ .,data = dataset,control = rpart.control(minsplit = 1))
View(regressor)
#predicting a random result
y_pred= predict(regressor, data.frame(levels(9.6))
y_pred
#predicting a random result
y_pred= predict(regressor, data.frame(levels(9.6))
#Visualizing the Decision Tree
library(ggplot2)
#Visualizing the Decision Tree
library(ggplot2)
x_grid= seq(min(dataset[,2:6]),max(dataset[,2:6]),0.1)
ylab('Sales')
ggplot +
geom_line(aes(x=x_grid, y= predict(regressor,newdata = data.frame(Level= x_grid))),colour='blue')+
ggtitle('Decision Tree regression model')+
ylab('Sales')
#importing the dataset
dataset= read.csv('Company_Data.csv')
dataset= dataset[,(1:6)]
#fitting the Decision Tree into the dataset
library(rpart)
regressor= rpart(formula = dataset$Sales~ .,data = dataset,control = rpart.control(minsplit = 1))
#predicting a random result
y_pred= predict(regressor, data.frame(levels(9.6)))
#predicting a random result
y_pred= predict(regressor, data.frame(Level= 9.6)
library(ggplot2)
x_grid= seq(min(dataset[,2:6]),max(dataset[,2:6]),0.1)
ggplot +
geom_point(aes(x= dataset[,2:6], y=dataset$Sales,colour='red')+
geom_line(aes(x=x_grid, y= predict(regressor,newdata = data.frame(Level= x_grid)))),colour='blue')+
ggtitle('Decision Tree regression model')+
xlab('All factors')+
ylab('Sales')
#predicting a random result
y_pred= predict(regressor, data.frame(Level= 9.6))
regressor= rpart(formula = Sales ~ .,data = dataset)
View(regressor)
y_pred= predict(regressor, data.frame(Level= 9.6))
library(ggplot2)
x_grid= seq(min(dataset[,2:6]),max(dataset[,2:6]),0.1)
ggplot +
geom_point(aes(x= dataset[,2:6], y=dataset$Sales,colour='red')+
geom_line(aes(x=x_grid, y= predict(regressor,newdata = data.frame(Level= x_grid)))),colour='blue')+
ggtitle('Decision Tree regression model')+
xlab('All factors')+
ylab('Sales')
ggplot +
geom_point(aes(x= dataset[2:6], y=dataset$Sales,colour='red')+
geom_line(aes(x=x_grid, y= predict(regressor,newdata = data.frame(Level= x_grid)))),colour='blue')+
ggtitle('Decision Tree regression model')+
xlab('All factors')+
ylab('Sales')
library(ggplot2)
x_grid= seq(min(dataset[,2:6]),max(dataset[,2:6]),0.1)
ggplot +
geom_point(aes(x= dataset$CompPrice, y=dataset$Sales,colour='red')+
geom_line(aes(x=x_grid, y= predict(regressor,newdata = data.frame(Level= x_grid)))),colour='blue')+
ggtitle('Decision Tree regression model')+
xlab('All factors')+
ylab('Sales')
regressor= rpart(formula = Sales ~ .,data = dataset,control = rpart.control(minsplit = 1))
dataset= read.csv('Company_Data.csv')
dataset= dataset[,(1:6)]
dataset= read.csv('Company_Data.csv')
dataset= dataset[,(1:6)]
#fitting the Decision Tree into the dataset
library(rpart)
regressor= rpart(formula = Sales ~ .,data = dataset,control = rpart.control(minsplit = 1))
y_pred= predict(regressor, data.frame(Level= 9.6))
regressor= rpart(formula = dataset$Sales ~ .,data = dataset,control = rpart.control(minsplit = 1))
#predicting a random result
y_pred= predict(regressor, data.frame(Level= 9.6))
View(dataset)
library(ggplot2)
x_grid= seq(min(dataset[2:6]),max(dataset[2:6]),0.1)
ggplot +
geom_point(aes(x= dataset[2:6], y=dataset$Sales),colour='red')+
geom_line(aes(x=x_grid, y= predict(regressor,newdata = data.frame(Level= x_grid))),colour='blue')+
ggtitle('Decision Tree regression model')+
xlab('All factors')+
ylab('Sales')
#predicting a random result
y_pred= predict(regressor, data.frame(levels(9.6)))
company_data <- read_csv('Company_Data.csv')
setwd("D:/Data science materials/Assignments/Decision Tree")
library(readr)
company_data <- read_csv('Company_Data.csv')
View(company_data)
company_data$NewSales <- as.factor(ifelse(company_data$Sales>7.49,1,0))
company_data$Urban <- as.factor(company_data$Urban)
company_data$US <- as.factor(company_data$US)
library(caTools)
set.seed(123)
split <- sample.split(company_data$Sales,SplitRatio = 0.90)
train_set <- subset(company_data,split==TRUE)
test_set <- subset(company_data,split==FALSE)
library(rpart)
model <- rpart(formula = NewSales~.,data=train_set,method='class')
summary(model)
y_pred <- predict(model,newdata = test_set,type = 'class')
library(gmodels)
CrossTable(y_pred,test_set$NewSales)
accuracy <- mean(y_pred==test_set$NewSales)
library(tree)
model_tree <- tree(formula = NewSales ~.,data=train_set)
summary(model_tree)
y_pred_tree <- predict(model_tree,newdata = test_set,type='class')
library(gmodels)
CrossTable(y_pred_tree,test_set$NewSales)
accuracy_tree <- mean(y_pred_tree==test_set$NewSales)
library(readr)
fraud_data <- read_csv(file.choose())
fraud_data$Fraud <- factor(ifelse(fraud_data$Taxable.Income>30000,"Good","Risky"))
library(caTools)
split <- sample.split(fraud_data$Fraud,SplitRatio =0.80)
train_data <- subset(fraud_data,split==TRUE)
test_data <- subset(fraud_data,split==FALSE)
View(fraud_data)
#Preparing the model
library(rpart)
classifier <- rpart(formula = Fraud~.,data=train_data)
summary(classifier)
y_pred <- predict(classifier,newdata = test_data[-7],type='class')
library(gmodels)
CrossTable(test_data$Fraud,y_pred)
mean(test_data$Fraud==y_pred)
# Plotting the tree
plot(classifier)
text(classifier)
